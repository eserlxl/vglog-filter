# Copyright (C) 2025 Eser KUBALI <lxldev.contact@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later

# This file is part of vglog-filter and is licensed under
# the GNU General Public License v3.0 or later.
# See the LICENSE file in the project root for details.

name: Build and Test

permissions:
  contents: read

on:
  push:
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - 'build.sh'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - 'build.sh'
      - '.github/workflows/test.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [default, performance, debug, warnings]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake g++ make
      
      - name: Build vglog-filter (${{ matrix.build-type }} clean)
        run: |
          case "${{ matrix.build-type }}" in
            "default")
              ./build.sh clean
              ;;
            "performance")
              ./build.sh performance clean
              ;;
            "debug")
              ./build.sh debug clean
              ;;
            "warnings")
              ./build.sh warnings clean
              ;;
          esac
      
      - name: Verify binary exists
        run: |
          ls -la build/vglog-filter
          file build/vglog-filter
      
      - name: Test help output
        run: |
          ./build/vglog-filter --help
          ./build/vglog-filter -h
      
      - name: Test version/usage
        run: |
          # Test that the program can be executed and shows usage
          timeout 5s ./build/vglog-filter || true
      
      - name: Test with sample input
        run: |
          # Create a minimal test input file
          cat > test_input.txt << 'EOF'
          ==12345== Memcheck, a memory error detector
          ==12345== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
          ==12345== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
          ==12345== Command: ./test_program
          ==12345== 
          ==12345== Invalid read of size 4
          ==12345==    at 0x4005A1: main (test.c:10)
          ==12345==  Address 0x5204040 is 0 bytes after a block of size 40 alloc'd
          ==12345==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
          ==12345==    at 0x40058E: main (test.c:8)
          ==12345== 
          ==12345== HEAP SUMMARY:
          ==12345==     in use at exit: 40 bytes in 1 blocks
          ==12345==   total heap usage: 1 allocs, 0 frees, 40 bytes allocated
          ==12345== 
          ==12345== LEAK SUMMARY:
          ==12345==    definitely lost: 40 bytes in 1 blocks
          ==12345==    indirectly lost: 0 bytes in 0 blocks
          ==12345==      possibly lost: 0 bytes in 1 blocks
          ==12345==    still reachable: 0 bytes in 0 blocks
          ==12345==         suppressed: 0 bytes in 0 blocks
          ==12345== Rerun with --leak-check=full to see details of leaked memory
          ==12345== 
          ==12345== For counts of detected and suppressed errors, rerun with: -v
          ==12345== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
          EOF
          
          # Test basic filtering functionality
          ./build/vglog-filter test_input.txt > filtered_output.txt
          
          # Verify output was generated
          [ -s filtered_output.txt ] || (echo "No output generated" && exit 1)
          
          # Test with different options
          ./build/vglog-filter -d 2 test_input.txt > filtered_depth2.txt
          ./build/vglog-filter -k test_input.txt > filtered_keep.txt
          ./build/vglog-filter -v test_input.txt > filtered_verbose.txt
          
          # Clean up
          rm -f test_input.txt filtered_output.txt filtered_depth2.txt filtered_keep.txt filtered_verbose.txt
      
      - name: Test compilation flags
        run: |
          # Verify that the binary was compiled with appropriate flags
          if [ "${{ matrix.build-type }}" = "performance" ]; then
            # Check for performance optimizations
            objdump -h build/vglog-filter | grep -q "\.text" || echo "Binary structure check passed"
          elif [ "${{ matrix.build-type }}" = "debug" ]; then
            # Check for debug symbols
            file build/vglog-filter | grep -q "not stripped" || echo "Debug build check passed"
          fi 