# Copyright © 2025 Eser KUBALI <lxldev.contact@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This file is part of vglog-filter and is licensed under
# the GNU General Public License v3.0 or later.
# See the LICENSE file in the project root for details.

name: Build and Test

permissions:
  contents: read

on:
  push:
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - 'build.sh'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
      - 'build.sh'
      - '.github/workflows/test.yml'

defaults:
  run:
    shell: bash
    # Set fail-fast behavior for all steps
    command: |
      set -euo pipefail
      ${{ job.steps.step.outputs.command }}

# Cancel older runs of the same ref to save CI minutes
concurrency:
  group: build-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        build-type: [default, performance, debug, warnings]
    env:
      BINARY_PATH: build/bin/vglog-filter
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache apt packages
        uses: actions/cache@v3
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake g++ make binutils coreutils

      - name: Ensure scripts are executable
        run: |
          chmod +x ./build.sh
          chmod +x ./run_tests.sh
          chmod +x ./test/smoke_test.sh

      - name: Build vglog-filter (${{ matrix.build-type }} + clean)
        run: |
          case "${{ matrix.build-type }}" in
            default)
              ./build.sh clean
              ;;
            performance)
              ./build.sh performance clean
              ;;
            debug)
              ./build.sh debug clean
              ;;
            warnings)
              ./build.sh warnings clean
              ;;
            *)
              echo "Unknown build type: ${{ matrix.build-type }}" >&2
              exit 2
              ;;
          esac

      - name: Verify binary exists and is executable
        run: |
          ls -la "${BINARY_PATH}"
          file "${BINARY_PATH}"
          test -x "${BINARY_PATH}"

      - name: Run smoke tests
        run: ./test/smoke_test.sh "${BINARY_PATH}"

      - name: Run C++ unit tests
        run: ./run_tests.sh --suite C++

      - name: Inspect compilation characteristics (non-fatal)
        run: |
          if [ "${{ matrix.build-type }}" = "performance" ]; then
            echo "[info] Checking for basic text section presence (objdump)…"
            if objdump -h "${BINARY_PATH}" | grep -q '\.text'; then
              echo "[ok] .text section found (expected)."
            else
              echo "[warn] Could not verify .text section."
            fi
          elif [ "${{ matrix.build-type }}" = "debug" ]; then
            echo "[info] Checking for debug symbols (file)…"
            if file "${BINARY_PATH}" | grep -qi 'not stripped'; then
              echo "[ok] Debug build appears to include symbols."
            else
              echo "[warn] Debug symbols not detected (binary may be stripped)."
            fi
          else
            echo "[info] No special checks for build type '${{ matrix.build-type }}'."
          fi
          # Non-fatal by design

      - name: Upload binary artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vglog-filter-${{ matrix.build-type }}
          path: ${{ env.BINARY_PATH }}
          if-no-files-found: error