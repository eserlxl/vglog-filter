#!/bin/bash
#
# Copyright © 2025 Eser KUBALI <lxldev.contact@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later
#
# This file is part of vglog-filter and is licensed under
# the GNU General Public License v3.0 or later.
# See the LICENSE file in the project root for details.
#
# Cursor IDE version bump helper
# Usage: Run from Cursor command palette or terminal

set -euo pipefail

# Colors for Cursor IDE output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
RED='\033[0;31m'
RESET='\033[0m'

# Get script directory and project root
SCRIPT_DIR="$(dirname "$(realpath "$0")")"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
VERSION_FILE="$PROJECT_ROOT/VERSION"

# Check if VERSION file exists
if [[ ! -f "$VERSION_FILE" ]]; then
    echo -e "${RED}Error: VERSION file not found${RESET}" >&2
    exit 1
fi

# Read current version
CURRENT_VERSION=$(tr -d '[:space:]' < "$VERSION_FILE")

echo -e "${CYAN}vglog-filter Version Bump Helper${RESET}"
echo -e "${CYAN}Current version: ${GREEN}$CURRENT_VERSION${RESET}"
echo ""

# Show options
echo "Select version bump type:"
echo "1) Patch (bug fixes) - $CURRENT_VERSION → $(echo "$CURRENT_VERSION" | awk -F. '{print $1"."$2"."$3+1}')"
echo "2) Minor (new features) - $CURRENT_VERSION → $(echo "$CURRENT_VERSION" | awk -F. '{print $1"."$2+1".0"}')"
echo "3) Major (breaking changes) - $CURRENT_VERSION → $(echo "$CURRENT_VERSION" | awk -F. '{print $1+1".0.0"}')"
echo "4) Cancel"
echo ""

# Read user choice
read -r -p "Enter choice (1-4): " choice

case $choice in
    1)
        echo -e "${YELLOW}Bumping patch version...${RESET}"
        "$PROJECT_ROOT/dev-bin/bump-version" patch --commit --tag
        ;;
    2)
        echo -e "${YELLOW}Bumping minor version...${RESET}"
        "$PROJECT_ROOT/dev-bin/bump-version" minor --commit --tag
        ;;
    3)
        echo -e "${YELLOW}Bumping major version...${RESET}"
        "$PROJECT_ROOT/dev-bin/bump-version" major --commit --tag
        ;;
    4)
        echo -e "${YELLOW}Cancelled${RESET}"
        exit 0
        ;;
    *)
        echo -e "${RED}Invalid choice${RESET}" >&2
        exit 1
        ;;
esac

echo ""
echo -e "${GREEN}Version bump completed!${RESET}"
echo -e "${YELLOW}Next steps:${RESET}"
echo "  git push origin main"
echo "  git push origin --tags" 